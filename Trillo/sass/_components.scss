///////////////////////////////////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}


///////////////////////////////////////////////
// SEARCH
.search {

    flex: 0 0 40%;

    display: flex; //flex item is becoming a flex container for it's children
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-smallest) {
        order: 1; //becomes the last one as all others have an order of 0 by default
        flex: 0 0 100%; //width is 100%
        background-color: var(--color-grey-light-2);
    }

    &__input {
        font-family: inherit;
        font-size: inherit; 
        color: inherit; //these aren't inherited from the global document automatically for inputs so have to set manually
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem; //moves the button on top of the input

        &:focus{
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {  //style the button when the input has focus
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);  //use 'fill' to set svg color
    }
}

///////////////////////////////////////////////
// USER NAVIGATION
.user-nav {

    display: flex;
    align-items: center;
    align-self: stretch;

    & > * { //all direct children
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: var(--color-white);
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        //can also use flebox on text to align it centrally
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

///////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {

    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex;
        margin: 0;
    }

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium) {
                margin-bottom: 0;
            }
        }

        @media only screen and (max-width: $bp-medium) {
            flex: 1;  //each item grows as much as it can
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0); //makes styling invisible until change scaleY to 1 on hover
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s,  
                    background-color .1s;
                    //transition takes .4secs with a delay of .2secs (so after transform has finished)
                    //the cubic bezier makes it start slowly and then speed up
    }

    &__item:hover::before,
    &__item--active:before {
        transform: scaleY(1); //makes item before styling visible, grows vertically from centre point
        width: 100%; //changes width from 3px to 100% on hover
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; //need to have a position specifed in order for z-index to work
        z-index: 10;    //set a higher z-index so the link appears on top of the hover effect

        display: flex;
        align-items: center; 

        @media only screen and (max-width: $bp-medium) {
            justify-content: center;
            padding: 2rem;
        }

        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 1.5rem .5rem;
        }
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor; //color of the current element or the parent element
                            //also changes color if have a change of color on hover on the parent

        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}

///////////////////////////////////////////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none;
    }
}

///////////////////////////////////////////////
// GALLERY
.gallery {
    display: flex;

    &__photo {
        width: 100%;  //for responsive images should always set width & height of images in percentages
        display: block; //stops it having a space underneath the image which would get if it was an inline element
    }
}

///////////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);
    
    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }

    &__stars{
        margin-right: auto; //occupies the space it needs
        display: flex; //trick to make stars all side by side and also vertically aligned without white space underneath
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: var(--color-white);
        margin-left: 3rem;
        align-self: stretch;
        padding: 0 2.25rem;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        @media only screen and (max-width: $bp-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}

///////////////////////////////////////////////
// BUTTON INLINE

.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;  //makes it more re-usable - can set font-size to differen values on different parent elements
    border-bottom: 1px solid currentColor; //border gets the same colour as the text, then when add hover it changes automatically
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: .3rem;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        & span {
            margin-left: .8rem;
        }
    }

    &:focus {
        outline: none; //removes the default blue border
        animation: pulsate 1s infinite;  //'infinite' makes the animation happen infinitely while the button is focused
    }
}

@keyframes pulsate {
    0%, 
    100% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: var(--shadow-medium);
    }
}

///////////////////////////////////////////////
// PARAGRAPH
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}

///////////////////////////////////////////////
// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;

    &__item {
        flex: 0 0 50%;  //gives 2 elements side by side, so has the effect of showing them as if they're in 2 columns
        margin-bottom: .7rem;
    } 

    &__item::before {
        content: ""; //have to specify a content property to get image to appear
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        //for older browsers as mask only supported by newer ones - can't change the color of the image when using background-image
        background-image: url(../img/chevron-thin-right.svg);
        background-size: cover;

        //newer browsers - mask (background color only shows through the mask (in this case the chevron image)
        @supports (-webkit-mask-image: url()) or (mask-image: url()) {
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover;
            mask-image: url(../img/chevron-thin-right.svg);
            mask-size: cover;
            background-image: none; //have to remove background image to stop it appearing instead of the mask
        }
    }
}

///////////////////////////////////////////////
// RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count {
        margin-right: auto; //auto calculates the margin to make friends move to right hand side
    }

    &__friends {
        display: flex;
    }

    &__photo {
        box-sizing: content-box; //excludes the padding from the height & width of the element, so images stay same size when border added
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid var(--color-white);

        &:not(:last-of-type) {
            margin-right: -2rem;  //forces images to overlap slightly
        }
    }
}

///////////////////////////////////////////////
// REVIEWS
.review {
    background-color: var(--color-white);
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden; //stops quote overflowing box

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;  //have to set a position for z-index to work
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto;  //pushes the rating to the right
    }

    &__user-name {
        text-transform: uppercase;
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        font-size: 2.2rem;
        color: var(--color-primary);
        font-weight: 300;
    }

    &::before {
        content: "\201C"; //ISO code for left double quote - see css-tricks.com/snippets/html/glyphs for codes
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;
    }
}

///////////////////////////////////////////////
// CALL TO ACTION
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: var(--color-white);
    position: relative;
    overflow: hidden;  //forces the text from the invisible element to be hidden as it's overflowed the btn
    cursor: pointer;

    & > * { //all child elements
        display: inline-block; //in order to use padding
        height: 100%;  //ensures is the same height as the parent element
        width: 100%;  
        transition: all .2s;
    }


    &__visible {
        padding: 2rem 7.5rem;
    }

    &__invisible {
        position: absolute;
        padding: 2rem 0;
        left: 0;
        top: -100%; //moves up by exactly the size of the element
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &__visible {
        transform: translateY(100%);  //translates it's height 100% down
    }

    &:hover &__invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}