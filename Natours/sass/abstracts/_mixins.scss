// use clearfix to stop height collapsing to zero as all child elements are floated by default
// this appends a sudo element after the element which will clear the floats
@mixin clearfix {
    &::after{
        content: ""; //need content to force a sudo element to appear on the page, but want it empty so we don't see it
        display: table;
        clear: both; //clears both left and right floats
    }
}

@mixin textWithGradientColor($start-color, $end-color) {
    display: inline-block; //so color only takes up width of the text
    background-image: linear-gradient(to right, $start-color, $end-color); //spread the color from light to dark
    -webkit-background-clip: text; //clips the background image exactly where the text is
    color: transparent; //hides the text, so that you see the background image instead, which is in effect the coloured text with the gradient applied

}

@mixin imagesOverlaid($start-color, $end-color, $image-url) {
    background-image: 
    linear-gradient(
        to right bottom, 
        rgba($start-color, 0.8), 
        rgba($end-color, 0.8)), 
        url($image-url); /* two images on top of each other */
    background-size: cover; /* fits element inside width of the box */
}

@mixin centerHorizontalVertical {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px +:       Big desktop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

1em = 16px
*/

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };   //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800px
    }
}